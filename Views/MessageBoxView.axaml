<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="using:BugFablesDataEditor.Views"
        mc:Ignorable="d" d:DesignWidth="100" d:DesignHeight="200"
        x:Class="BugFablesDataEditor.Views.MessageBoxView"
        SizeToContent="WidthAndHeight"
        MinWidth="300"
        MaxWidth="{Binding MaxWidth}"
        Icon="{Binding WindowIconPath}"
        WindowStartupLocation="{Binding LocationOfMyWindow}"
        MinHeight="150"
        MaxHeight="200"
        FontFamily="{Binding FontFamily}"
        Title="{Binding ContentTitle}">
  <Window.KeyBindings>
    <KeyBinding Gesture="Ctrl+C" Command="{Binding Copy}" />
    <KeyBinding Gesture="Enter" Command="{Binding EnterClick}" />
  </Window.KeyBindings>

  <Window.Styles>
    <Style Selector="TextBox">
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="TextWrapping" Value="Wrap" />
      <Setter Property="AcceptsReturn" Value="True" />
      <Setter Property="IsReadOnly" Value="True" />
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    </Style>
    <Style Selector="TextBox:focus /template/ Border#border">
      <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style Selector="TextBox:focus /template/ Border#PART_BorderElement">
      <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style Selector="Button">
      <Setter Property="Margin" Value="15 0 0 0" />
      <Setter Property="MinHeight" Value="24" />
      <Setter Property="MinWidth" Value="75" />
    </Style>
  </Window.Styles>

  <Border BorderBrush="White" BorderThickness="1">
    <DockPanel>
      <views:WindowsMsgBoxTitleBar IsVisible="False" Name="windowsTitleBar" />
      <DockPanel>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="15" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="15" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="15" />
            <RowDefinition Height="*" />
            <RowDefinition Height="15" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="15" />
          </Grid.RowDefinitions>
          <!--Icon-->
          <Image Grid.Row="1" Grid.Column="1" MaxHeight="50" MaxWidth="50" VerticalAlignment="Center"
                 IsVisible="{Binding HasIcon}"
                 Source="{Binding ImagePath}" Margin="5,0,0,0" />
          <Grid Grid.Row="1" Grid.Column="3">
            <Grid.RowDefinitions>
              <RowDefinition Height="15" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!--Content text-->
            <TextBox Grid.Row="1" FontFamily="{Binding FontFamily}" Text="{Binding ContentMessage}"/>
          </Grid>
          <!--Buttons-->
          <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3"
                      HorizontalAlignment="Right">
            <Button Content="OK" Command="{Binding ButtonClick}"
                    CommandParameter="{Binding $self.Content}" IsVisible="{Binding IsOkShowed}"/>
            <Button Content="Yes" Command="{Binding ButtonClick}" CommandParameter="{Binding $self.Content}"
                    IsVisible="{Binding IsYesShowed}" />
            <Button Content="No" Command="{Binding ButtonClick}" CommandParameter="{Binding $self.Content}"
                    IsVisible="{Binding IsNoShowed}" />
            <Button Content="Abort" Command="{Binding ButtonClick}" CommandParameter="{Binding $self.Content}"
                    IsVisible="{Binding IsAbortShowed}" />
            <Button Content="Cancel" Command="{Binding ButtonClick}" CommandParameter="{Binding $self.Content}"
                    IsVisible="{Binding IsCancelShowed}" />
          </StackPanel>
        </Grid>
      </DockPanel>
    </DockPanel>
  </Border>
</Window>
